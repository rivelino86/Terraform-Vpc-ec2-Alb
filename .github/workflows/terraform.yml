name: 'Terraform project'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Set to yes to destroy infra after apply'
        required: false
        default: 'no'
        type: string

permissions:
  contents: read

jobs:
  security-scan:
    name: 'Security Scan'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkov Security Scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: . #${{ env.TF_WORKING_DIR }}
          skip_check: "CKV_AWS_378,CKV2_AWS_12,CKV_AWS_260,CKV_AWS_135,CKV_AWS_91,CKV_AWS_2"
          soft_fail: true

     
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    needs: security-scan  # Wait for security scan to complete

    # Use the Bash shell 
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository 
      - name: Checkout
        uses: actions/checkout@v4

      # Install the latest version of Terraform 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.5'  # Specify a version for consistency
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Initialize a new or existing Terraform working directory
      - name: Terraform Init
        run: terraform init

      # Checks that all Terraform configuration 
      - name: Terraform Format
        run: terraform fmt -check
       
      - name: Terraform Validate
        run: terraform validate

      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Run Infracost
        run: infracost breakdown --path .

      # Generates an execution plan
      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color
        continue-on-error: true

      # Apply on main branch push
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.event.inputs.destroy != 'yes'
        run: terraform apply -auto-approve -input=false
        env:
          TF_LOG: DEBUG

      # Destroy conditionally
      - name: Terraform Destroy (Conditional)
        if: github.event.inputs.destroy == 'yes'
        run: terraform destroy -auto-approve -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

  # terrascan:
  #   name: 'Terrascan Security Scan'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Run Terrascan
  #       uses: tenable/terrascan-action@main
  #       with:
  #         iac_type: 'terraform'
  #         iac_version: 'v14'
  #         policy_type: 'aws'
  #         only_warn: true